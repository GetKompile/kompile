'\" t
.\"     Title: kompile-exec-step-create-logging
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.10
.\"      Date: 2022-07-09
.\"    Manual: Kompile Manual
.\"    Source: 
.\"  Language: English
.\"
.TH "KOMPILE\-EXEC\-STEP\-CREATE\-LOGGING" "1" "2022-07-09" "" "Kompile Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
.sp
kompile\-exec\-step\-create\-LOGGING \-
.SH "SYNOPSIS"
.sp
\fBkompile exec step\-create LOGGING\fP \fB\-\-fileFormat\fP=\fIPARAM\fP [\fB\-\-keyFilterRegex\fP=\fIPARAM\fP]
[\fB\-\-log\fP=\fIPARAM\fP] [\fB\-\-logLevel\fP=\fIPARAM\fP]
.SH "DESCRIPTION"

.SH "OPTIONS"
.sp
\fB\-\-fileFormat\fP=\fIPARAM\fP
.RS 4
The file format (either json or yaml/yml) to output the pipeline step in
.RE
.sp
\fB\-\-keyFilterRegex\fP=\fIPARAM\fP
.RS 4
A regular expression that allows filtering of keys \- i.e., only those that match the regex will be logged.
.RE
.sp
\fB\-\-log\fP=\fIPARAM\fP
.RS 4
An enum specifying what part of a data instance should be logged.
.RE
.sp
\fB\-\-logLevel\fP=\fIPARAM\fP
.RS 4
Log level. This is similar to how standard logging frameworks define logging categories.
.RE